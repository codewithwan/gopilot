// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "API Support",
            "url": "http://github.com/codewithwan/gopilot",
            "email": "support@gopilot.com"
        },
        "license": {
            "name": "MIT",
            "url": "https://opensource.org/licenses/MIT"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/api/v1/auth/login": {
            "post": {
                "description": "Authenticate user and return JWT token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Login user",
                "parameters": [
                    {
                        "description": "User login credentials",
                        "name": "credentials",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/domain.LoginRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/domain.LoginResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/v1/auth/register": {
            "post": {
                "description": "Create a new user account",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Register a new user",
                "parameters": [
                    {
                        "description": "User registration data",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/domain.RegisterRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/domain.User"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/v1/todos": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get all todos for the authenticated user",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "todos"
                ],
                "summary": "List all todos",
                "parameters": [
                    {
                        "type": "integer",
                        "default": 10,
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 0,
                        "description": "Offset",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Create a new todo item",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "todos"
                ],
                "summary": "Create a new todo",
                "parameters": [
                    {
                        "description": "Todo to create",
                        "name": "todo",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/domain.CreateTodoRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/domain.Todo"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/v1/todos/{id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get a specific todo item by ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "todos"
                ],
                "summary": "Get a todo by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Todo ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/domain.Todo"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Update an existing todo item",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "todos"
                ],
                "summary": "Update a todo",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Todo ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Todo update data",
                        "name": "todo",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/domain.UpdateTodoRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/domain.Todo"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Delete a todo item",
                "tags": [
                    "todos"
                ],
                "summary": "Delete a todo",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Todo ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/p/{id}": {
            "get": {
                "description": "Get the content of a paste by ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "pastebin"
                ],
                "summary": "Get paste content",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Paste ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/domain.Paste"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/s/{code}": {
            "get": {
                "description": "Redirect to the original URL and record click statistics",
                "tags": [
                    "url-shortener"
                ],
                "summary": "Redirect to original URL",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Short URL code",
                        "name": "code",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "302": {
                        "description": "Redirect to original URL"
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/v1/convert/base": {
            "post": {
                "description": "Convert numbers between different bases",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "converter"
                ],
                "summary": "Convert number base",
                "parameters": [
                    {
                        "description": "Base conversion request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/domain.ConvertBaseRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/domain.ConvertBaseResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/v1/convert/color": {
            "post": {
                "description": "Convert colors between different formats",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "converter"
                ],
                "summary": "Convert color format",
                "parameters": [
                    {
                        "description": "Color conversion request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/domain.ConvertColorRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/domain.ConvertColorResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/v1/convert/time": {
            "post": {
                "description": "Convert time between different formats",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "converter"
                ],
                "summary": "Convert time format",
                "parameters": [
                    {
                        "description": "Time conversion request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/domain.ConvertTimeRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/domain.ConvertTimeResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/v1/crypto/aes": {
            "post": {
                "description": "Perform AES encryption or decryption",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "crypto"
                ],
                "summary": "AES encrypt/decrypt",
                "parameters": [
                    {
                        "description": "AES request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/domain.AESRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/domain.AESResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/v1/crypto/hmac": {
            "post": {
                "description": "Sign or verify HMAC signatures",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "crypto"
                ],
                "summary": "HMAC sign/verify",
                "parameters": [
                    {
                        "description": "HMAC request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/domain.HMACRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/domain.HMACResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/v1/crypto/rsa": {
            "post": {
                "description": "Perform RSA encryption or decryption",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "crypto"
                ],
                "summary": "RSA encrypt/decrypt",
                "parameters": [
                    {
                        "description": "RSA request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/domain.RSARequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/domain.RSAResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/v1/crypto/rsa/keygen": {
            "post": {
                "description": "Generate an RSA public/private keypair",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "crypto"
                ],
                "summary": "Generate RSA keypair",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/domain.RSAKeypairResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/v1/encode": {
            "post": {
                "description": "Encode or decode text using specified operation",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "hash-encode"
                ],
                "summary": "Encode/decode text",
                "parameters": [
                    {
                        "description": "Encode request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/domain.EncodeRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/domain.EncodeResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/v1/format/json": {
            "post": {
                "description": "Format or minify JSON",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "formatter"
                ],
                "summary": "Format JSON",
                "parameters": [
                    {
                        "description": "JSON format request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/domain.FormatJSONRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/domain.FormatJSONResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/v1/format/yaml": {
            "post": {
                "description": "Convert between YAML and JSON formats",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "formatter"
                ],
                "summary": "Convert YAML/JSON",
                "parameters": [
                    {
                        "description": "YAML conversion request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/domain.ConvertYAMLRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/domain.ConvertYAMLResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/v1/generate/lorem": {
            "post": {
                "description": "Generate lorem ipsum text",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "generator"
                ],
                "summary": "Generate lorem ipsum",
                "parameters": [
                    {
                        "description": "Lorem request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/domain.GenerateLoremRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/domain.GenerateLoremResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/v1/generate/number": {
            "post": {
                "description": "Generate random numbers",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "generator"
                ],
                "summary": "Generate random numbers",
                "parameters": [
                    {
                        "description": "Random number request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/domain.GenerateRandomNumberRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/domain.GenerateRandomNumberResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/v1/generate/password": {
            "post": {
                "description": "Generate a random secure password",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "hash-encode"
                ],
                "summary": "Generate password",
                "parameters": [
                    {
                        "description": "Password request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/domain.GeneratePasswordRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/domain.GeneratePasswordResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/v1/generate/token": {
            "post": {
                "description": "Generate random tokens",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "generator"
                ],
                "summary": "Generate token",
                "parameters": [
                    {
                        "description": "Token request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/domain.GenerateTokenRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/domain.GenerateTokenResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/v1/generate/user": {
            "post": {
                "description": "Generate fake user profiles",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "generator"
                ],
                "summary": "Generate fake user data",
                "parameters": [
                    {
                        "description": "Fake user request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/domain.GenerateFakeUserRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/domain.GenerateFakeUserResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/v1/generate/uuid": {
            "post": {
                "description": "Generate UUIDs",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "generator"
                ],
                "summary": "Generate UUID",
                "parameters": [
                    {
                        "description": "UUID request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/domain.GenerateUUIDRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/domain.GenerateUUIDResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/v1/hash": {
            "post": {
                "description": "Hash text using specified algorithm",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "hash-encode"
                ],
                "summary": "Hash text",
                "parameters": [
                    {
                        "description": "Hash request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/domain.HashRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/domain.HashResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/v1/paste": {
            "post": {
                "description": "Create a new paste/snippet",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "pastebin"
                ],
                "summary": "Create a paste",
                "parameters": [
                    {
                        "description": "Paste request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/domain.CreatePasteRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/domain.Paste"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/v1/paste/recent": {
            "get": {
                "description": "Get a list of recent public pastes",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "pastebin"
                ],
                "summary": "List recent pastes",
                "parameters": [
                    {
                        "type": "integer",
                        "default": 20,
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/domain.Paste"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/v1/paste/{id}": {
            "delete": {
                "description": "Delete a paste by ID",
                "tags": [
                    "pastebin"
                ],
                "summary": "Delete a paste",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Paste ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/v1/qr": {
            "post": {
                "description": "Generate a QR code from text",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "qr-code"
                ],
                "summary": "Generate QR code",
                "parameters": [
                    {
                        "description": "QR code request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/domain.GenerateQRRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/domain.QRCode"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/v1/qr/{id}": {
            "get": {
                "description": "Get a previously generated QR code",
                "produces": [
                    "image/png"
                ],
                "tags": [
                    "qr-code"
                ],
                "summary": "Get QR code",
                "parameters": [
                    {
                        "type": "string",
                        "description": "QR code ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "file"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/v1/shorten": {
            "post": {
                "description": "Create a shortened URL with optional custom alias and expiration",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "url-shortener"
                ],
                "summary": "Create a short URL",
                "parameters": [
                    {
                        "description": "Short URL request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/domain.CreateShortURLRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/domain.ShortURL"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/v1/shorten/{code}": {
            "get": {
                "description": "Get details and statistics of a short URL",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "url-shortener"
                ],
                "summary": "Get short URL details",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Short URL code",
                        "name": "code",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/domain.ShortURL"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "domain.AESRequest": {
            "type": "object",
            "required": [
                "key",
                "operation",
                "text"
            ],
            "properties": {
                "key": {
                    "type": "string",
                    "maxLength": 32,
                    "minLength": 16
                },
                "operation": {
                    "type": "string",
                    "enum": [
                        "encrypt",
                        "decrypt"
                    ]
                },
                "text": {
                    "type": "string"
                }
            }
        },
        "domain.AESResponse": {
            "type": "object",
            "properties": {
                "result": {
                    "type": "string"
                }
            }
        },
        "domain.ConvertBaseRequest": {
            "type": "object",
            "required": [
                "to_base",
                "value"
            ],
            "properties": {
                "from_base": {
                    "type": "integer",
                    "maximum": 64,
                    "minimum": 2
                },
                "to_base": {
                    "type": "integer",
                    "maximum": 64,
                    "minimum": 2
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "domain.ConvertBaseResponse": {
            "type": "object",
            "properties": {
                "from_base": {
                    "type": "integer"
                },
                "original": {
                    "type": "string"
                },
                "result": {
                    "type": "string"
                },
                "to_base": {
                    "type": "integer"
                }
            }
        },
        "domain.ConvertColorRequest": {
            "type": "object",
            "required": [
                "to",
                "value"
            ],
            "properties": {
                "to": {
                    "type": "string",
                    "enum": [
                        "rgb",
                        "hex",
                        "hsl"
                    ]
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "domain.ConvertColorResponse": {
            "type": "object",
            "properties": {
                "format": {
                    "type": "string"
                },
                "original": {
                    "type": "string"
                },
                "result": {
                    "type": "string"
                }
            }
        },
        "domain.ConvertTimeRequest": {
            "type": "object",
            "required": [
                "from",
                "to",
                "value"
            ],
            "properties": {
                "from": {
                    "type": "string",
                    "enum": [
                        "unix",
                        "iso8601"
                    ]
                },
                "to": {
                    "type": "string",
                    "enum": [
                        "unix",
                        "iso8601",
                        "human"
                    ]
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "domain.ConvertTimeResponse": {
            "type": "object",
            "properties": {
                "original": {
                    "type": "string"
                },
                "result": {
                    "type": "string"
                }
            }
        },
        "domain.ConvertYAMLRequest": {
            "type": "object",
            "required": [
                "content",
                "to"
            ],
            "properties": {
                "content": {
                    "type": "string"
                },
                "to": {
                    "type": "string",
                    "enum": [
                        "json",
                        "yaml"
                    ]
                }
            }
        },
        "domain.ConvertYAMLResponse": {
            "type": "object",
            "properties": {
                "result": {
                    "type": "string"
                }
            }
        },
        "domain.CreatePasteRequest": {
            "type": "object",
            "required": [
                "content"
            ],
            "properties": {
                "compressed": {
                    "type": "boolean"
                },
                "content": {
                    "type": "string"
                },
                "expire_in": {
                    "description": "in hours",
                    "type": "integer",
                    "minimum": 1
                },
                "is_public": {
                    "type": "boolean"
                },
                "syntax": {
                    "type": "string",
                    "maxLength": 50
                },
                "title": {
                    "type": "string",
                    "maxLength": 255
                }
            }
        },
        "domain.CreateShortURLRequest": {
            "type": "object",
            "required": [
                "original_url"
            ],
            "properties": {
                "alias": {
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 3
                },
                "expire_in": {
                    "description": "in hours",
                    "type": "integer",
                    "minimum": 1
                },
                "is_public": {
                    "type": "boolean"
                },
                "original_url": {
                    "type": "string"
                }
            }
        },
        "domain.CreateTodoRequest": {
            "type": "object",
            "required": [
                "title"
            ],
            "properties": {
                "description": {
                    "type": "string",
                    "maxLength": 1000
                },
                "title": {
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 1
                }
            }
        },
        "domain.EncodeRequest": {
            "type": "object",
            "required": [
                "operation",
                "text"
            ],
            "properties": {
                "operation": {
                    "type": "string",
                    "enum": [
                        "base64-encode",
                        "base64-decode",
                        "url-encode",
                        "url-decode",
                        "hex-encode",
                        "hex-decode"
                    ]
                },
                "text": {
                    "type": "string"
                }
            }
        },
        "domain.EncodeResponse": {
            "type": "object",
            "properties": {
                "operation": {
                    "type": "string"
                },
                "result": {
                    "type": "string"
                }
            }
        },
        "domain.FakeUser": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "domain.FormatJSONRequest": {
            "type": "object",
            "required": [
                "json"
            ],
            "properties": {
                "indent": {
                    "type": "integer",
                    "maximum": 8,
                    "minimum": 0
                },
                "json": {
                    "type": "string"
                },
                "minify": {
                    "type": "boolean"
                }
            }
        },
        "domain.FormatJSONResponse": {
            "type": "object",
            "properties": {
                "result": {
                    "type": "string"
                }
            }
        },
        "domain.GenerateFakeUserRequest": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "integer",
                    "maximum": 100,
                    "minimum": 1
                }
            }
        },
        "domain.GenerateFakeUserResponse": {
            "type": "object",
            "properties": {
                "users": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/domain.FakeUser"
                    }
                }
            }
        },
        "domain.GenerateLoremRequest": {
            "type": "object",
            "required": [
                "type"
            ],
            "properties": {
                "count": {
                    "type": "integer",
                    "maximum": 100,
                    "minimum": 1
                },
                "type": {
                    "type": "string",
                    "enum": [
                        "words",
                        "sentences",
                        "paragraphs"
                    ]
                }
            }
        },
        "domain.GenerateLoremResponse": {
            "type": "object",
            "properties": {
                "text": {
                    "type": "string"
                }
            }
        },
        "domain.GeneratePasswordRequest": {
            "type": "object",
            "properties": {
                "include_lower": {
                    "type": "boolean"
                },
                "include_numbers": {
                    "type": "boolean"
                },
                "include_symbols": {
                    "type": "boolean"
                },
                "include_upper": {
                    "type": "boolean"
                },
                "length": {
                    "type": "integer",
                    "maximum": 128,
                    "minimum": 8
                }
            }
        },
        "domain.GeneratePasswordResponse": {
            "type": "object",
            "properties": {
                "length": {
                    "type": "integer"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "domain.GenerateQRRequest": {
            "type": "object",
            "required": [
                "text"
            ],
            "properties": {
                "format": {
                    "type": "string",
                    "enum": [
                        "png",
                        "svg"
                    ]
                },
                "size": {
                    "type": "integer",
                    "maximum": 2048,
                    "minimum": 64
                },
                "text": {
                    "type": "string",
                    "maxLength": 1000
                }
            }
        },
        "domain.GenerateRandomNumberRequest": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "integer",
                    "maximum": 100,
                    "minimum": 1
                },
                "max": {
                    "type": "number"
                },
                "min": {
                    "type": "number"
                },
                "type": {
                    "type": "string",
                    "enum": [
                        "int",
                        "float"
                    ]
                }
            }
        },
        "domain.GenerateRandomNumberResponse": {
            "type": "object",
            "properties": {
                "numbers": {
                    "type": "array",
                    "items": {}
                }
            }
        },
        "domain.GenerateTokenRequest": {
            "type": "object",
            "properties": {
                "length": {
                    "type": "integer",
                    "maximum": 256,
                    "minimum": 16
                },
                "prefix": {
                    "type": "string",
                    "maxLength": 20
                },
                "suffix": {
                    "type": "string",
                    "maxLength": 20
                }
            }
        },
        "domain.GenerateTokenResponse": {
            "type": "object",
            "properties": {
                "token": {
                    "type": "string"
                }
            }
        },
        "domain.GenerateUUIDRequest": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "integer",
                    "maximum": 100,
                    "minimum": 1
                },
                "version": {
                    "type": "integer",
                    "enum": [
                        1,
                        4,
                        7
                    ]
                }
            }
        },
        "domain.GenerateUUIDResponse": {
            "type": "object",
            "properties": {
                "uuids": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "domain.HMACRequest": {
            "type": "object",
            "required": [
                "key",
                "operation",
                "text"
            ],
            "properties": {
                "algorithm": {
                    "type": "string",
                    "enum": [
                        "sha256",
                        "sha512"
                    ]
                },
                "key": {
                    "type": "string"
                },
                "operation": {
                    "type": "string",
                    "enum": [
                        "sign",
                        "verify"
                    ]
                },
                "signature": {
                    "description": "Required for verify",
                    "type": "string"
                },
                "text": {
                    "type": "string"
                }
            }
        },
        "domain.HMACResponse": {
            "type": "object",
            "properties": {
                "signature": {
                    "type": "string"
                },
                "valid": {
                    "type": "boolean"
                }
            }
        },
        "domain.HashRequest": {
            "type": "object",
            "required": [
                "algorithm",
                "text"
            ],
            "properties": {
                "algorithm": {
                    "type": "string",
                    "enum": [
                        "md5",
                        "sha1",
                        "sha256",
                        "sha512",
                        "bcrypt"
                    ]
                },
                "salt": {
                    "type": "string"
                },
                "text": {
                    "type": "string"
                }
            }
        },
        "domain.HashResponse": {
            "type": "object",
            "properties": {
                "algorithm": {
                    "type": "string"
                },
                "hash": {
                    "type": "string"
                }
            }
        },
        "domain.LoginRequest": {
            "type": "object",
            "required": [
                "password",
                "username"
            ],
            "properties": {
                "password": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "domain.LoginResponse": {
            "type": "object",
            "properties": {
                "token": {
                    "type": "string"
                },
                "user": {
                    "$ref": "#/definitions/domain.User"
                }
            }
        },
        "domain.Paste": {
            "type": "object",
            "properties": {
                "content": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "expires_at": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "is_compressed": {
                    "type": "boolean"
                },
                "is_public": {
                    "type": "boolean"
                },
                "syntax": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "domain.QRCode": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "format": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "size": {
                    "type": "integer"
                },
                "text": {
                    "type": "string"
                }
            }
        },
        "domain.RSAKeypairResponse": {
            "type": "object",
            "properties": {
                "private_key": {
                    "type": "string"
                },
                "public_key": {
                    "type": "string"
                }
            }
        },
        "domain.RSARequest": {
            "type": "object",
            "required": [
                "key",
                "operation",
                "text"
            ],
            "properties": {
                "key": {
                    "type": "string"
                },
                "operation": {
                    "type": "string",
                    "enum": [
                        "encrypt",
                        "decrypt"
                    ]
                },
                "text": {
                    "type": "string"
                }
            }
        },
        "domain.RSAResponse": {
            "type": "object",
            "properties": {
                "result": {
                    "type": "string"
                }
            }
        },
        "domain.RegisterRequest": {
            "type": "object",
            "required": [
                "password",
                "username"
            ],
            "properties": {
                "password": {
                    "type": "string",
                    "maxLength": 100,
                    "minLength": 6
                },
                "username": {
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 3
                }
            }
        },
        "domain.ShortURL": {
            "type": "object",
            "properties": {
                "alias": {
                    "type": "string"
                },
                "clicks": {
                    "type": "integer"
                },
                "code": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "expires_at": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "is_public": {
                    "type": "boolean"
                },
                "original_url": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "domain.Todo": {
            "type": "object",
            "properties": {
                "completed": {
                    "type": "boolean"
                },
                "created_at": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "title": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "user_id": {
                    "type": "integer"
                }
            }
        },
        "domain.UpdateTodoRequest": {
            "type": "object",
            "properties": {
                "completed": {
                    "type": "boolean"
                },
                "description": {
                    "type": "string",
                    "maxLength": 1000
                },
                "title": {
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 1
                }
            }
        },
        "domain.User": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "updated_at": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "BearerAuth": {
            "description": "Type \"Bearer\" followed by a space and JWT token.",
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8080",
	BasePath:         "/",
	Schemes:          []string{},
	Title:            "GoPilot API - Developer Tools Platform",
	Description:      "Production-ready REST API platform with modular developer tools",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
